<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--targetRuntime="MyBatis3Simple":生成简单版的CRUD;MyBatis3:豪华版 -->
    <context id="MyBatisGenerator" targetRuntime="MyBatis3">
        <!-- 生成的实体Bean,将实现Serializable -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true:是 ; false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        <!-- jdbcConnection:连接数据库 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://121.36.8.146:3306/micro_blog?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true"
                        userId="root"
                        password="root">
        </jdbcConnection>

        <!-- 默认false,把JDBC DECIMAL和 NUMERIC 类型解析为 Integer true,
            把JDBC DECIMAL和 NUMERIC类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 生成model模型所对应的包路径,以及文件存放路径(targetProject);
            targetProject可以指定具体的路径,如./src/main/java,也可以使用“MAVEN”来自动生成,
            这样生成的代码会在target/generatord-source目录下 -->
        <javaModelGenerator targetPackage="yuhao.entity"
                            targetProject="./src/main/java">
            <property name="enableSubPackages" value="true" />
            <!--从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
            <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
       一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖-->
            <property name="autoDelimitKeywords" value="false"/>
            <!-- 生成的Java文件的编码 -->
            <property name="javaFileEncoding" value="UTF-8"/>
            <!-- 格式化java代码 -->
            <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
            <!-- 格式化XML代码 -->
            <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
            <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
            <property name="beginningDelimiter" value="`"/>
            <property name="endingDelimiter" value="`"/>
        </javaModelGenerator>

        <!--对应的mapper.xml文件 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="./src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件-->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="yuhao.mapper" targetProject="./src/main/java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!-- 数据表与Bean的映射，这里配置的是不生成Example文件 -->
<!--        <table tableName="article" domainObjectName="Article" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"-->
<!--               enableSelectByExample="false" selectByExampleQueryId="false" >-->
<!--            <columnOverride column="article_content" javaType="java.lang.String" jdbcType="mediumtext" />-->
<!--        </table>-->
        <table tableName="article_index" domainObjectName="ArticleIndex" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false" >
            <columnOverride column="content" javaType="java.lang.String" jdbcType="mediumtext" />
        </table>

    </context>
</generatorConfiguration>
