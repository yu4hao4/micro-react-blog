<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yuhao.mapper.MyArticleMapper">
  <resultMap id="MyBaseResultMap" type="yuhao.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="publish_time" jdbcType="VARCHAR" property="publishTime" />
    <result column="publish_user" jdbcType="VARCHAR" property="publishUser" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="article_content" jdbcType="VARCHAR" property="articleContent" />
    <result column="article_browse" jdbcType="INTEGER" property="articleBrowse" />
  </resultMap>
  <resultMap id="MyDTOResultMap" type="yuhao.dto.resp.ArticleRespDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="publish_time" jdbcType="VARCHAR" property="publishTime" />
    <result column="publish_user" jdbcType="VARCHAR" property="publishUser" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="article_content" jdbcType="VARCHAR" property="articleContent" />
    <result column="article_browse" jdbcType="INTEGER" property="articleBrowse" />
  </resultMap>
  <sql id="My_Base_Column_List">
    id, publish_time, publish_user, article_title, article_content, article_browse
  </sql>
  <sql id="My_DTO_Base_Column_List">
    id, publish_time, publish_user, article_title, article_content, article_browse
  </sql>
  <select id="searchArticleByFilterConditions" resultMap="MyDTOResultMap">
    select
    <include refid="My_DTO_Base_Column_List"/>
    from article
    <where>
      <if test="id != null and id != ''">
        id = #{id}
      </if>
      <if test="articleTitle != null and articleTitle != ''">
        and article_title like CONCAT('%',#{articleTitle,jdbcType=VARCHAR},'%')
      </if>
    </where>
    order by id desc
  </select>

  <delete id="batchDeleteArticle">
    delete from article where id in
    <foreach collection="list" item="item" index="no" open="("
             separator="," close=")">
      #{item.id}
    </foreach>
  </delete>

<!--  <select id="selectByUsername" resultMap="BaseResultMap">-->
<!--    select-->
<!--    <include refid="Base_Column_List" />-->
<!--    from admin-->
<!--    where admin_name = #{adminName,jdbcType=INTEGER}-->
<!--  </select>-->
<!--  <select id="searchAdminByFilterCondition" resultMap="BaseResultMap">-->
<!--    select-->
<!--    <include refid="Base_Column_List"/>-->
<!--    from admin-->
<!--    <where>-->
<!--      <if test="adminName != null and adminName != ''">-->
<!--        admin_name like CONCAT('%',#{adminName,jdbcType=VARCHAR},'%')-->
<!--      </if>-->
<!--      <if test="adminEmail != null and adminEmail != ''">-->
<!--        and admin_email like CONCAT('%',#{adminEmail,jdbcType=VARCHAR},'%')-->
<!--      </if>-->
<!--      <if test="adminLevel != null and adminLevel != ''">-->
<!--        and admin_level = #{adminLevel,jdbcType=VARCHAR}-->
<!--      </if>-->
<!--    </where>-->
<!--    order by admin_id desc-->
<!--  </select>-->
<!--  <update id="batchDeleteAdmin">-->
<!--    update admin set admin_status='停用' where admin_id in-->
<!--    <foreach collection="list" item="item" index="no" open="("-->
<!--             separator="," close=")">-->
<!--      #{item.adminId}-->
<!--    </foreach>-->
<!--  </update>-->
</mapper>
